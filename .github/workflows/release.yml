name: "Release"

on:
  push:
    branches:
      - master
      - dev

env:
  ECR_REPOSITORY: electric-cash
  IMAGE_TAG: ${{ github.sha }}
  BUILD_NAME: electric-cash-build-${{ github.run_id }}

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set environment variables for dev branch
        run: |
          if [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
            echo "IMAGE_TAG=dev-$IMAGE_TAG" >> "$GITHUB_ENV"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: false

      - name: Pull docker docker image (for layers that we dont have)
        continue-on-error: true
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Builder image
        run: docker build -t $BUILD_NAME --build-arg GIT_COMMIT=$GITHUB_REF-$GITHUB_SHA -f ci/docker/Dockerfile .

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag $BUILD_NAME $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $BUILD_NAME $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2 }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr-2
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-2.outputs.registry }}
        run: |
          docker tag $BUILD_NAME $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $BUILD_NAME $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_3 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_3 }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr-3
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-3.outputs.registry }}
        run: |
          docker tag $BUILD_NAME $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $BUILD_NAME $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
